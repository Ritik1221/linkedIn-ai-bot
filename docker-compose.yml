version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=linkedin_agent
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./linkedin-agent-backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./linkedin-agent-backend:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/linkedin_agent
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000

  celery_worker:
    build:
      context: ./linkedin-agent-backend
      dockerfile: Dockerfile.dev
    command: celery -A src.worker.main worker --loglevel=info
    volumes:
      - ./linkedin-agent-backend:/app
    depends_on:
      - backend
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/linkedin_agent
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG

  flower:
    build:
      context: ./linkedin-agent-backend
      dockerfile: Dockerfile.dev
    command: celery -A src.worker.main flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2

  frontend:
    build:
      context: ./linkedin-agent-frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./linkedin-agent-frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: 